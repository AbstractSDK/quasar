// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/abag/quasarnode/testutil/mock (interfaces: ICAControllerKeeper)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	types "github.com/cosmos/cosmos-sdk/types"
	gomock "github.com/golang/mock/gomock"
)

// MockICAControllerKeeper is a mock of ICAControllerKeeper interface.
type MockICAControllerKeeper struct {
	ctrl     *gomock.Controller
	recorder *MockICAControllerKeeperMockRecorder
}

// MockICAControllerKeeperMockRecorder is the mock recorder for MockICAControllerKeeper.
type MockICAControllerKeeperMockRecorder struct {
	mock *MockICAControllerKeeper
}

// NewMockICAControllerKeeper creates a new mock instance.
func NewMockICAControllerKeeper(ctrl *gomock.Controller) *MockICAControllerKeeper {
	mock := &MockICAControllerKeeper{ctrl: ctrl}
	mock.recorder = &MockICAControllerKeeperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockICAControllerKeeper) EXPECT() *MockICAControllerKeeperMockRecorder {
	return m.recorder
}

// GetInterchainAccountAddress mocks base method.
func (m *MockICAControllerKeeper) GetInterchainAccountAddress(arg0 types.Context, arg1, arg2 string) (string, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInterchainAccountAddress", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetInterchainAccountAddress indicates an expected call of GetInterchainAccountAddress.
func (mr *MockICAControllerKeeperMockRecorder) GetInterchainAccountAddress(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInterchainAccountAddress", reflect.TypeOf((*MockICAControllerKeeper)(nil).GetInterchainAccountAddress), arg0, arg1, arg2)
}

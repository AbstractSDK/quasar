syntax = "proto3";
package abag.quasarnode.orion;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
// import "cosmos/base/query/v1beta1/pagination.proto";
import "orion/params.proto";
import "orion/lp_position.proto";
// import "orion/epoch_lp_info.proto";
import "orion/reward_collection.proto";
// import "orion/user_lp_info.proto";
import "orion/lp_stat.proto";
import "orion/account_info.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/abag/quasarnode/x/orion/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/abag/quasarnode/orion/params";
  }
  // Queries a list of ReserveBalance items.
	rpc ReserveBalance(QueryReserveBalanceRequest) returns (QueryReserveBalanceResponse) {
		option (google.api.http).get = "/abag/quasarnode/orion/reserve_balance/{denom}";
	}
 
// Queries a LpPosition by index.
	rpc LpPosition(QueryGetLpPositionRequest) returns (QueryGetLpPositionResponse) {
		option (google.api.http).get = "/abag/quasarnode/orion/lp_position";
	}
 
// Queries a RewardCollection by index.
	rpc RewardCollection(QueryGetRewardCollectionRequest) returns (QueryGetRewardCollectionResponse) {
		option (google.api.http).get = "/abag/quasarnode/orion/reward_collection";
	}
 
// Queries a LpStat by index.
	rpc LpStat(QueryGetLpStatRequest) returns (QueryGetLpStatResponse) {
		option (google.api.http).get = "/abag/quasarnode/orion/lp_stat";
	}
// Queries a list of ReserveBalanceAll items.
	rpc ReserveBalanceAll(QueryReserveBalanceAllRequest) returns (QueryReserveBalanceAllResponse) {
		option (google.api.http).get = "/abag/quasarnode/orion/reserve_balance_all";
	}

// Queries a list of LpEpochPairs items.
	rpc LpEpochPairs(QueryLpEpochPairsRequest) returns (QueryLpEpochPairsResponse) {
		option (google.api.http).get = "/abag/quasarnode/orion/lp_epoch_pairs";
	}

// Queries a list of ListModuleAccounts items.
	rpc ListModuleAccounts(QueryListModuleAccountsRequest) returns (QueryListModuleAccountsResponse) {
		option (google.api.http).get = "/abag/quasarnode/orion/list_module_accounts";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryReserveBalanceRequest {
  string denom = 1;
}

message QueryReserveBalanceResponse {
  uint64 amount = 1;
}
 
message QueryGetLpPositionRequest {
	uint64 lpId = 1;
}

message QueryGetLpPositionResponse {
	LpPosition LpPosition = 1 [(gogoproto.nullable) = false];
}
 

message QueryGetRewardCollectionRequest {
	uint64 epochDay = 1;
}

message QueryGetRewardCollectionResponse {
	RewardCollection RewardCollection = 1 [(gogoproto.nullable) = false];
} 

message QueryGetLpStatRequest {
	uint64 epochDay = 1;
}

message QueryGetLpStatResponse {
	LpStat LpStat = 1 [(gogoproto.nullable) = false];
}
message QueryReserveBalanceAllRequest {
}

message QueryReserveBalanceAllResponse {
  repeated AccountInfo accInfo = 1 [(gogoproto.nullable) = false];
}

message QueryLpEpochPairsRequest {
}

message QueryLpEpochPairsResponse {
  repeated LpEpochPair lpEpochPairs = 1 [(gogoproto.nullable) = false];
}

message QueryListModuleAccountsRequest {
}

message QueryListModuleAccountsResponse {
	repeated AccountInfo accInfo = 1 [(gogoproto.nullable) = false];
}

// this line is used by starport scaffolding # 3

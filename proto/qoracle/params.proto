syntax = "proto3";
package abag.quasarnode.qoracle;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "ibc/core/client/v1/client.proto";

option go_package = "github.com/abag/quasarnode/x/qoracle/types";

message BandchainParams {
  IBCParams oracle_ibc_params = 1 
      [(gogoproto.moretags) = "yaml:\"oracle_ibc_params\"", (gogoproto.nullable) = false]; // IBC params for the oracle module of bandchain
  CoinRatesParams coin_rates_params = 2 
      [(gogoproto.moretags) = "yaml:\"coin_rates_params\"", (gogoproto.nullable) = false]; // Script params for the coin rates script
}

message IBCParams {
  string authorized_channel = 1 [(gogoproto.moretags) = "yaml:\"authorized_channel\""]; // Identifier of authorized channel that we are allowed to send/receive packets
  ibc.core.client.v1.Height timeout_height = 2
      [(gogoproto.moretags) = "yaml:\"timeout_height\"", (gogoproto.nullable) = false]; // Timeout height relative to the current block height. The timeout is disabled when set to 0.
  uint64 timeout_timestamp = 3 [(gogoproto.moretags) = "yaml:\"timeout_timestamp\""]; // Timeout timestamp relative to counterparty chain current time. The timeout is disabled when set to 0.
}

message CoinRatesParams {
  string epoch_identifier = 1 [(gogoproto.moretags) = "yaml:\"epoch_identifier\""]; // Identifier of the epoch that we trigger the script request
  repeated cosmos.base.v1beta1.DecCoin symbols_with_mul = 2
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (gogoproto.moretags) = "yaml:\"symbols_with_mul\""];
  OracleScriptParams script_params = 3
      [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"script_params\""];
}

message OracleScriptParams {
  uint64 script_id = 1 [(gogoproto.moretags) = "yaml:\"script_id\""];
  uint64 ask_count = 2 [(gogoproto.moretags) = "yaml:\"ask_count\""];
  uint64 min_count = 3 [(gogoproto.moretags) = "yaml:\"min_count\""];
  repeated cosmos.base.v1beta1.Coin fee_limit = 4
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
  uint64 prepare_gas = 5 [(gogoproto.moretags) = "yaml:\"prepare_gas\""];
  uint64 execute_gas = 6 [(gogoproto.moretags) = "yaml:\"execute_gas\""];
}

message OneHopIbcDenomMapping {
  // option (gogoproto.goproto_stringer) = false;

  string originName = 1 [(gogoproto.moretags) = "yaml:\"origin_name\""]; // Original denom name i.e. uatom
  string quasar = 2  [(gogoproto.moretags) = "yaml:\"quasar\""]; // one hop ibc denom representation in quasar
  string osmo = 3 [(gogoproto.moretags) = "yaml:\"osmo\""]; // one hop ibc denom representation in osmo
  // Representation in the other chains can be added in the future.
}

// Params defines the parameters for the module.
message Params {
  option (gogoproto.goproto_stringer) = false;
  
  BandchainParams bandchain_params = 1 [(gogoproto.moretags) = "yaml:\"bandchain_params\"", (gogoproto.nullable) = false];
  string oracleAccounts = 2 [(gogoproto.moretags) = "yaml:\"oracle_accounts\""];
  repeated  string stableDenoms = 3 [(gogoproto.moretags) = "yaml:\"stable_denoms\""];
  repeated OneHopIbcDenomMapping oneHopDenomMap = 4 [(gogoproto.moretags) = "yaml:\"onehop_ibcdenoms\""];
}
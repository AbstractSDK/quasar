syntax = "proto3";
package abag.quasarnode.qoracle;

import "gogoproto/gogo.proto";

option go_package = "github.com/abag/quasarnode/x/qoracle/types";

message OneHopIbcDenomMapping {
  // option (gogoproto.goproto_stringer) = false;

  string originName = 1 [(gogoproto.moretags) = "yaml:\"origin_name\""]; // Original denom name i.e. uatom
  string quasar = 2  [(gogoproto.moretags) = "yaml:\"quasar\""]; // one hop ibc denom representation in quasar
  string osmo = 3 [(gogoproto.moretags) = "yaml:\"osmo\""]; // one hop ibc denom representation in osmo
  // Representation in the other chains can be added in the future.
}

message BandchainParams {
  string oracle_port_id = 1 [(gogoproto.moretags) = "yaml:\"oracle_port_id\""]; // ID of the oracle module's port in which we accept new channels
  string oracle_version = 2 [(gogoproto.moretags) = "yaml:\"oracle_version\""]; // Version of oracle module that we gonna negotiate at opening a new ibc channel
  string oracle_active_channel_path = 3 [(gogoproto.moretags) = "yaml:\"oracle_active_channel_path\""]; // Channel path to bandchain oracle module we use to send requests
  uint64 coin_rates_script_id = 4 [(gogoproto.moretags) = "yaml:\"coin_rates_script_id\""]; // Script ID of the coin rates script
}

// Params defines the parameters for the module.
message Params {
  option (gogoproto.goproto_stringer) = false;
  
  BandchainParams bandchain_params = 1 [(gogoproto.moretags) = "yaml:\"bandchain_params\"", (gogoproto.nullable) = false];
  string oracleAccounts = 2 [(gogoproto.moretags) = "yaml:\"oracle_accounts\""];
  repeated  string stableDenoms = 3 [(gogoproto.moretags) = "yaml:\"stable_denoms\""];
  repeated OneHopIbcDenomMapping oneHopDenomMap = 4 [(gogoproto.moretags) = "yaml:\"onehop_ibcdenoms\""];
}
syntax = "proto3";
package quasarlabs.quasarnode.intergamm;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "intergamm/params.proto";
import "intergamm/port_info.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/quasarlabs/quasarnode/x/intergamm/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/quasarlabs/quasarnode/intergamm/params";
  }
  // Queries a list of InterchainAccountFromAddress items.
	rpc InterchainAccountFromAddress(QueryInterchainAccountFromAddressRequest) returns (QueryInterchainAccountFromAddressResponse) {
		option (google.api.http).get = "/quasarlabs/quasarnode/intergamm/interchain_account_from_address";
	}

// Queries a list of GetPortInfo items.
	rpc GetPortInfo(QueryGetPortInfoRequest) returns (QueryGetPortInfoResponse) {
		option (google.api.http).get = "/quasarlabs/quasarnode/intergamm/get_port_info/{portID}/{destinationChainID}";
	}

// Queries a list of ICAAddressOnZone items.
	rpc ICAAddressOnZone(QueryICAAddressOnZoneRequest) returns (QueryICAAddressOnZoneResponse) {
		option (google.api.http).get = "/quasarlabs/quasarnode/intergamm/ica_address_on_zone/{owner}/{zoneId}";
	}

// Queries a list of ICAAddressOnDenomNativeZone items.
	rpc ICAAddressOnDenomNativeZone(QueryICAAddressOnDenomNativeZoneRequest) returns (QueryICAAddressOnDenomNativeZoneResponse) {
		option (google.api.http).get = "/quasarlabs/quasarnode/intergamm/ica_address_on_denom_native_zone/{owner}/{denom}";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryInterchainAccountFromAddressRequest {
  string owner                      = 1;
  string connection_id = 2 [(gogoproto.moretags) = "yaml:\"connection_id\""];
}

message QueryInterchainAccountFromAddressResponse {
  string interchain_account_address = 1 [(gogoproto.moretags) = "yaml:\"interchain_account_address\""];
}

message QueryGetPortInfoRequest {
  string portID = 1;
  string destinationChainID = 2;
}

message QueryGetPortInfoResponse {
  PortInfo portInfo = 1 [(gogoproto.nullable) = false];
}

message QueryICAAddressOnZoneRequest {
  string owner = 1;
  string zoneId = 2;
}

message QueryICAAddressOnZoneResponse {
  string icaAddress = 1;
}

message QueryICAAddressOnDenomNativeZoneRequest {
  string owner = 1;
  string denom = 2;
}

message QueryICAAddressOnDenomNativeZoneResponse {
  string icaAddress = 1;
}

// this line is used by starport scaffolding # 3
